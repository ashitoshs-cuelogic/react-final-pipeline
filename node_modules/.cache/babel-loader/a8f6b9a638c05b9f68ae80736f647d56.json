{"ast":null,"code":"import _regeneratorRuntime from \"/home/ashitosh/mineapp/mine3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ashitosh/mineapp/mine3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/ashitosh/mineapp/mine3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/ashitosh/mineapp/mine3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ashitosh/mineapp/mine3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ashitosh/mineapp/mine3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ashitosh/mineapp/mine3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ashitosh/mineapp/mine3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ashitosh/mineapp/mine3/src/components/createpage.js\";\nimport React, { Component, Fragment } from \"react\";\nimport fire from \"./../config/firebase\";\nimport { Link } from \"react-router-dom\";\nimport \"froala-editor/js/froala_editor.pkgd.min.js\";\nimport \"froala-editor/css/froala_style.min.css\";\nimport \"froala-editor/css/froala_editor.pkgd.min.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport FroalaEditor from \"react-froala-wysiwyg\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../UI/Spinner\";\nimport moment from \"moment\";\nimport Input from \"../UI/Input/Input\";\nvar initialState = {\n  error: \"\",\n  loading: false,\n  orderForm: {\n    title: {\n      elementType: \"input\",\n      elementConfig: {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\"\n      },\n      value: \"\",\n      rule: \"required\",\n      error: \"\"\n    },\n    content: {\n      elementType: \"froalaEditor\",\n      elementConfig: {\n        // type: \"text\",\n        name: \"content\" // placeholder: \"Content\"\n\n      },\n      value: \"\",\n      rule: \"required\",\n      error: \"\"\n    },\n    status: {\n      elementType: \"select\",\n      elementConfig: {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Username\"\n      },\n      value: \"\",\n      rule: \"required\",\n      error: \"\"\n    }\n  }\n};\n\nvar Createpage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Createpage, _Component);\n\n  function Createpage(props) {\n    var _this;\n\n    _classCallCheck(this, Createpage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Createpage).call(this, props));\n\n    _this.onSubmitCreatepage = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        loading: true\n      });\n\n      Object.entries(_this.props.pageState).forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            val = _ref2[1];\n\n        if (val == null) delete _this.props.pageState[key];\n      });\n\n      _this.createPageAction();\n    };\n\n    _this.createPageAction =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _this.createPageData();\n\n            case 3:\n              _this.setState({\n                loading: false\n              });\n\n              _this.props.history.push(\"/showpages\");\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n\n              _this.setState({\n                loading: false,\n                error: _context.t0\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n    _this.state = initialState;\n    _this.onSubmitCreatepage = _this.onSubmitCreatepage.bind();\n    return _this;\n  }\n\n  _createClass(Createpage, [{\n    key: \"createPageData\",\n    value: function createPageData() {\n      var key = \"pages/\" + this.props.pageState.title;\n      return fire.database().ref(key).set({\n        title: this.props.pageState.title,\n        content: this.props.pageState.content,\n        status: this.props.pageState.status,\n        author: localStorage.getItem(\"authUser\"),\n        created_on: moment().format(),\n        updated_on: moment().format()\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          error = _this$state.error,\n          loading = _this$state.loading;\n      var formElementsArray = [];\n\n      for (var key in this.state.orderForm) {\n        formElementsArray.push({\n          id: key,\n          config: this.state.orderForm[key]\n        });\n      }\n\n      var createPage = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          width: \"100%\",\n          textAlign: \"center\",\n          alignContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Create Page\"), error ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, error.message)) : null, formElementsArray.map(function (formElement) {\n        return React.createElement(Input, {\n          key: formElement.id,\n          label: formElement.id,\n          elementType: formElement.config.elementType,\n          elementConfig: formElement.config.elementConfig,\n          value: formElement.config.value,\n          error: formElement.config.error,\n          changed: function changed(event) {\n            return _this2.inputChangedHandler(event, formElement.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        });\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \" Title : \"), React.createElement(\"input\", {\n        style: {\n          borderRadius: \"5px\",\n          padding: \"5px\",\n          width: \"25%\",\n          marginLeft: \"10px\"\n        },\n        type: \"text\",\n        name: \"title\",\n        placeholder: \" Title\" // value={title}\n        ,\n        onChange: this.props.onInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \" Content : \"), React.createElement(\"div\", {\n        style: {\n          width: \"50%\",\n          textAlign: \"center\",\n          alignContent: \"center\",\n          marginLeft: \"25%\",\n          borderRadius: \"5px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(FroalaEditor, {\n        tag: \"textarea\" // model={content}\n        ,\n        onModelChange: this.props.onModelChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \" Status : \"), React.createElement(\"select\", {\n        style: {\n          borderRadius: \"5px\",\n          padding: \"5px\",\n          width: \"15%\",\n          backgroundColor: \"white\",\n          marginLeft: \"10px\"\n        },\n        name: \"status\",\n        onChange: this.props.onInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Select Status\"), React.createElement(\"option\", {\n        value: \"published\" // selected={status == \"published\" ? \"selected\" : null}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Published\"), React.createElement(\"option\", {\n        value: \"on_Hold\" // selected={status == \"on_Hold\" ? \"selected\" : null}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"On Hold\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        style: {\n          borderRadius: \"5px\",\n          background: \"green\",\n          padding: \"5px\",\n          borderStyle: \"none\",\n          color: \"white\",\n          width: \"110px\"\n        },\n        onClick: this.onSubmitCreatepage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Create Page\"), \" \", \"or\", React.createElement(Link, {\n        to: \"/showpages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \" Cancel \"))));\n\n      if (loading) {\n        createPage = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, createPage);\n    }\n  }]);\n\n  return Createpage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    pageState: state.authState\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onInputChange: function onInputChange(e) {\n      return dispatch({\n        type: \"onChange\",\n        name: e.target.name,\n        value: e.target.value\n      });\n    },\n    onModelChange: function onModelChange(model) {\n      return dispatch({\n        type: \"onChange\",\n        name: \"content\",\n        value: model\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Createpage);","map":{"version":3,"sources":["/home/ashitosh/mineapp/mine3/src/components/createpage.js"],"names":["React","Component","Fragment","fire","Link","FroalaEditor","connect","Spinner","moment","Input","initialState","error","loading","orderForm","title","elementType","elementConfig","type","name","placeholder","value","rule","content","status","Createpage","props","onSubmitCreatepage","e","preventDefault","setState","Object","entries","pageState","forEach","key","val","createPageAction","createPageData","history","push","state","bind","database","ref","set","author","localStorage","getItem","created_on","format","updated_on","formElementsArray","id","config","createPage","width","textAlign","alignContent","color","message","map","formElement","event","inputChangedHandler","borderRadius","padding","marginLeft","onInputChange","onModelChange","backgroundColor","background","borderStyle","mapStateToProps","authState","mapDispatchToProps","dispatch","target","model"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAO,4CAAP;AACA,OAAO,wCAAP;AACA,OAAO,8CAAP;AACA,OAAO,mCAAP;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE;AACLC,MAAAA,WAAW,EAAE,OADR;AAELC,MAAAA,aAAa,EAAE;AACbC,QAAAA,IAAI,EAAE,MADO;AAEbC,QAAAA,IAAI,EAAE,OAFO;AAGbC,QAAAA,WAAW,EAAE;AAHA,OAFV;AAOLC,MAAAA,KAAK,EAAE,EAPF;AAQLC,MAAAA,IAAI,EAAE,UARD;AASLV,MAAAA,KAAK,EAAE;AATF,KADE;AAYTW,IAAAA,OAAO,EAAE;AACPP,MAAAA,WAAW,EAAE,cADN;AAEPC,MAAAA,aAAa,EAAE;AACb;AACAE,QAAAA,IAAI,EAAE,SAFO,CAGb;;AAHa,OAFR;AAOPE,MAAAA,KAAK,EAAE,EAPA;AAQPC,MAAAA,IAAI,EAAE,UARC;AASPV,MAAAA,KAAK,EAAE;AATA,KAZA;AAuBTY,IAAAA,MAAM,EAAE;AACNR,MAAAA,WAAW,EAAE,QADP;AAENC,MAAAA,aAAa,EAAE;AACbC,QAAAA,IAAI,EAAE,OADO;AAEbC,QAAAA,IAAI,EAAE,OAFO;AAGbC,QAAAA,WAAW,EAAE;AAHA,OAFT;AAONC,MAAAA,KAAK,EAAE,EAPD;AAQNC,MAAAA,IAAI,EAAE,UARA;AASNV,MAAAA,KAAK,EAAE;AATD;AAvBC;AAHQ,CAArB;;IAwCMa,U;;;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;;AADiB,UAMnBC,kBANmB,GAME,UAAAC,CAAC,EAAI;AACxBA,MAAAA,CAAC,CAACC,cAAF;;AAEA,YAAKC,QAAL,CAAc;AACZjB,QAAAA,OAAO,EAAE;AADG,OAAd;;AAIAkB,MAAAA,MAAM,CAACC,OAAP,CAAe,MAAKN,KAAL,CAAWO,SAA1B,EAAqCC,OAArC,CAA6C,gBAAgB;AAAA;AAAA,YAAdC,GAAc;AAAA,YAATC,GAAS;;AAC3D,YAAIA,GAAG,IAAI,IAAX,EAAiB,OAAO,MAAKV,KAAL,CAAWO,SAAX,CAAqBE,GAArB,CAAP;AAClB,OAFD;;AAIA,YAAKE,gBAAL;AACD,KAlBkB;;AAAA,UAoBnBA,gBApBmB;AAAA;AAAA;AAAA;AAAA,6BAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAET,MAAKC,cAAL,EAFS;;AAAA;AAIf,oBAAKR,QAAL,CAAc;AACZjB,gBAAAA,OAAO,EAAE;AADG,eAAd;;AAGA,oBAAKa,KAAL,CAAWa,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;;AAPe;AAAA;;AAAA;AAAA;AAAA;;AASf,oBAAKV,QAAL,CAAc;AACZjB,gBAAAA,OAAO,EAAE,KADG;AAEZD,gBAAAA,KAAK;AAFO,eAAd;;AATe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KApBA;AAEjB,UAAK6B,KAAL,GAAa9B,YAAb;AACA,UAAKgB,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBe,IAAxB,EAA1B;AAHiB;AAIlB;;;;qCAgCgB;AACf,UAAIP,GAAG,GAAG,WAAW,KAAKT,KAAL,CAAWO,SAAX,CAAqBlB,KAA1C;AAEA,aAAOX,IAAI,CACRuC,QADI,GAEJC,GAFI,CAEAT,GAFA,EAGJU,GAHI,CAGA;AACH9B,QAAAA,KAAK,EAAE,KAAKW,KAAL,CAAWO,SAAX,CAAqBlB,KADzB;AAEHQ,QAAAA,OAAO,EAAE,KAAKG,KAAL,CAAWO,SAAX,CAAqBV,OAF3B;AAGHC,QAAAA,MAAM,EAAE,KAAKE,KAAL,CAAWO,SAAX,CAAqBT,MAH1B;AAIHsB,QAAAA,MAAM,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAJL;AAKHC,QAAAA,UAAU,EAAExC,MAAM,GAAGyC,MAAT,EALT;AAMHC,QAAAA,UAAU,EAAE1C,MAAM,GAAGyC,MAAT;AANT,OAHA,CAAP;AAWD;;;6BAEQ;AAAA;;AAAA,wBACoB,KAAKT,KADzB;AAAA,UACC7B,KADD,eACCA,KADD;AAAA,UACQC,OADR,eACQA,OADR;AAGP,UAAMuC,iBAAiB,GAAG,EAA1B;;AACA,WAAK,IAAIjB,GAAT,IAAgB,KAAKM,KAAL,CAAW3B,SAA3B,EAAsC;AACpCsC,QAAAA,iBAAiB,CAACZ,IAAlB,CAAuB;AACrBa,UAAAA,EAAE,EAAElB,GADiB;AAErBmB,UAAAA,MAAM,EAAE,KAAKb,KAAL,CAAW3B,SAAX,CAAqBqB,GAArB;AAFa,SAAvB;AAID;;AAED,UAAIoB,UAAU,GACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,MADF;AAELC,UAAAA,SAAS,EAAE,QAFN;AAGLC,UAAAA,YAAY,EAAE;AAHT,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPF,EAQG9C,KAAK,GACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,KAAK,EAAE;AAAE+C,UAAAA,KAAK,EAAE;AAAT,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B/C,KAAK,CAACgD,OAAnC,CADF,CADI,GAIF,IAZN,EAaGR,iBAAiB,CAACS,GAAlB,CAAsB,UAAAC,WAAW;AAAA,eAChC,oBAAC,KAAD;AACE,UAAA,GAAG,EAAEA,WAAW,CAACT,EADnB;AAEE,UAAA,KAAK,EAAES,WAAW,CAACT,EAFrB;AAGE,UAAA,WAAW,EAAES,WAAW,CAACR,MAAZ,CAAmBtC,WAHlC;AAIE,UAAA,aAAa,EAAE8C,WAAW,CAACR,MAAZ,CAAmBrC,aAJpC;AAKE,UAAA,KAAK,EAAE6C,WAAW,CAACR,MAAZ,CAAmBjC,KAL5B;AAME,UAAA,KAAK,EAAEyC,WAAW,CAACR,MAAZ,CAAmB1C,KAN5B;AAOE,UAAA,OAAO,EAAE,iBAAAmD,KAAK;AAAA,mBACZ,MAAI,CAACC,mBAAL,CAAyBD,KAAzB,EAAgCD,WAAW,CAACT,EAA5C,CADY;AAAA,WAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADgC;AAAA,OAAjC,CAbH,EA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1BF,EA2BE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA3BF,EA4BE;AACE,QAAA,KAAK,EAAE;AACLY,UAAAA,YAAY,EAAE,KADT;AAELC,UAAAA,OAAO,EAAE,KAFJ;AAGLV,UAAAA,KAAK,EAAE,KAHF;AAILW,UAAAA,UAAU,EAAE;AAJP,SADT;AAOE,QAAA,IAAI,EAAC,MAPP;AAQE,QAAA,IAAI,EAAC,OARP;AASE,QAAA,WAAW,EAAC,QATd,CAUE;AAVF;AAWE,QAAA,QAAQ,EAAE,KAAKzC,KAAL,CAAW0C,aAXvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5BF,EAyCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzCF,EA0CE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA1CF,EA2CE;AACE,QAAA,KAAK,EAAE;AACLZ,UAAAA,KAAK,EAAE,KADF;AAELC,UAAAA,SAAS,EAAE,QAFN;AAGLC,UAAAA,YAAY,EAAE,QAHT;AAILS,UAAAA,UAAU,EAAE,KAJP;AAKLF,UAAAA,YAAY,EAAE;AALT,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE,oBAAC,YAAD;AACE,QAAA,GAAG,EAAC,UADN,CAEE;AAFF;AAGE,QAAA,aAAa,EAAE,KAAKvC,KAAL,CAAW2C,aAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CA3CF,EA0DE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1DF,EA2DE;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA3DF,EA4DE;AACE,QAAA,KAAK,EAAE;AACLJ,UAAAA,YAAY,EAAE,KADT;AAELC,UAAAA,OAAO,EAAE,KAFJ;AAGLV,UAAAA,KAAK,EAAE,KAHF;AAILc,UAAAA,eAAe,EAAE,OAJZ;AAKLH,UAAAA,UAAU,EAAE;AALP,SADT;AAQE,QAAA,IAAI,EAAC,QARP;AASE,QAAA,QAAQ,EAAE,KAAKzC,KAAL,CAAW0C,aATvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAXF,EAYE;AACE,QAAA,KAAK,EAAC,WADR,CAEE;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAZF,EAkBE;AACE,QAAA,KAAK,EAAC,SADR,CAEE;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAlBF,CA5DF,EAqFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArFF,EAsFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtFF,EAuFE;AACE,QAAA,KAAK,EAAE;AACLH,UAAAA,YAAY,EAAE,KADT;AAELM,UAAAA,UAAU,EAAE,OAFP;AAGLL,UAAAA,OAAO,EAAE,KAHJ;AAILM,UAAAA,WAAW,EAAE,MAJR;AAKLb,UAAAA,KAAK,EAAE,OALF;AAMLH,UAAAA,KAAK,EAAE;AANF,SADT;AASE,QAAA,OAAO,EAAE,KAAK7B,kBAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAvFF,EAmGY,GAnGZ,QAqGE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBArGF,CADF,CADF,CADF;;AA8GA,UAAId,OAAJ,EAAa;AACX0C,QAAAA,UAAU,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAb;AACD;;AACD,aAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAWA,UAAX,CAAP;AACD;;;;EAlLsBrD,S;;AAqLzB,IAAMuE,eAAe,GAAG,SAAlBA,eAAkB,CAAAhC,KAAK,EAAI;AAC/B,SAAO;AACLR,IAAAA,SAAS,EAAEQ,KAAK,CAACiC;AADZ,GAAP;AAGD,CAJD;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACrC,SAAO;AACLR,IAAAA,aAAa,EAAE,uBAAAxC,CAAC;AAAA,aACdgD,QAAQ,CAAC;AACP1D,QAAAA,IAAI,EAAE,UADC;AAEPC,QAAAA,IAAI,EAAES,CAAC,CAACiD,MAAF,CAAS1D,IAFR;AAGPE,QAAAA,KAAK,EAAEO,CAAC,CAACiD,MAAF,CAASxD;AAHT,OAAD,CADM;AAAA,KADX;AAOLgD,IAAAA,aAAa,EAAE,uBAAAS,KAAK;AAAA,aAClBF,QAAQ,CAAC;AACP1D,QAAAA,IAAI,EAAE,UADC;AAEPC,QAAAA,IAAI,EAAE,SAFC;AAGPE,QAAAA,KAAK,EAAEyD;AAHA,OAAD,CADU;AAAA;AAPf,GAAP;AAcD,CAfD;;AAiBA,eAAevE,OAAO,CACpBkE,eADoB,EAEpBE,kBAFoB,CAAP,CAGblD,UAHa,CAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport fire from \"./../config/firebase\";\nimport { Link } from \"react-router-dom\";\n\nimport \"froala-editor/js/froala_editor.pkgd.min.js\";\nimport \"froala-editor/css/froala_style.min.css\";\nimport \"froala-editor/css/froala_editor.pkgd.min.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport FroalaEditor from \"react-froala-wysiwyg\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../UI/Spinner\";\nimport moment from \"moment\";\nimport Input from \"../UI/Input/Input\";\n\nconst initialState = {\n  error: \"\",\n  loading: false,\n  orderForm: {\n    title: {\n      elementType: \"input\",\n      elementConfig: {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\"\n      },\n      value: \"\",\n      rule: \"required\",\n      error: \"\"\n    },\n    content: {\n      elementType: \"froalaEditor\",\n      elementConfig: {\n        // type: \"text\",\n        name: \"content\"\n        // placeholder: \"Content\"\n      },\n      value: \"\",\n      rule: \"required\",\n      error: \"\"\n    },\n    status: {\n      elementType: \"select\",\n      elementConfig: {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Username\"\n      },\n      value: \"\",\n      rule: \"required\",\n      error: \"\"\n    }\n  }\n};\n\nclass Createpage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n    this.onSubmitCreatepage = this.onSubmitCreatepage.bind();\n  }\n\n  onSubmitCreatepage = e => {\n    e.preventDefault();\n\n    this.setState({\n      loading: true\n    });\n\n    Object.entries(this.props.pageState).forEach(([key, val]) => {\n      if (val == null) delete this.props.pageState[key];\n    });\n\n    this.createPageAction();\n  };\n\n  createPageAction = async () => {\n    try {\n      await this.createPageData();\n\n      this.setState({\n        loading: false\n      });\n      this.props.history.push(\"/showpages\");\n    } catch (e) {\n      this.setState({\n        loading: false,\n        error: e\n      });\n    }\n  };\n\n  createPageData() {\n    var key = \"pages/\" + this.props.pageState.title;\n\n    return fire\n      .database()\n      .ref(key)\n      .set({\n        title: this.props.pageState.title,\n        content: this.props.pageState.content,\n        status: this.props.pageState.status,\n        author: localStorage.getItem(\"authUser\"),\n        created_on: moment().format(),\n        updated_on: moment().format()\n      });\n  }\n\n  render() {\n    const { error, loading } = this.state;\n\n    const formElementsArray = [];\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n\n    let createPage = (\n      <div>\n        <form>\n          <div\n            style={{\n              width: \"100%\",\n              textAlign: \"center\",\n              alignContent: \"center\"\n            }}\n          >\n            <h3>Create Page</h3>\n            {error ? (\n              <div>\n                <p style={{ color: \"red\" }}>{error.message}</p>\n              </div>\n            ) : null}\n            {formElementsArray.map(formElement => (\n              <Input\n                key={formElement.id}\n                label={formElement.id}\n                elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                error={formElement.config.error}\n                changed={event =>\n                  this.inputChangedHandler(event, formElement.id)\n                }\n              />\n            ))}\n            <br />\n            <label htmlFor=\"title\"> Title : </label>\n            <input\n              style={{\n                borderRadius: \"5px\",\n                padding: \"5px\",\n                width: \"25%\",\n                marginLeft: \"10px\"\n              }}\n              type=\"text\"\n              name=\"title\"\n              placeholder=\" Title\"\n              // value={title}\n              onChange={this.props.onInputChange}\n            />\n            <br />\n            <label htmlFor=\"content\"> Content : </label>\n            <div\n              style={{\n                width: \"50%\",\n                textAlign: \"center\",\n                alignContent: \"center\",\n                marginLeft: \"25%\",\n                borderRadius: \"5px\"\n              }}\n            >\n              <FroalaEditor\n                tag=\"textarea\"\n                // model={content}\n                onModelChange={this.props.onModelChange}\n              />\n            </div>\n            <br />\n            <label htmlFor=\"status\"> Status : </label>\n            <select\n              style={{\n                borderRadius: \"5px\",\n                padding: \"5px\",\n                width: \"15%\",\n                backgroundColor: \"white\",\n                marginLeft: \"10px\"\n              }}\n              name=\"status\"\n              onChange={this.props.onInputChange}\n            >\n              <option>Select Status</option>\n              <option\n                value=\"published\"\n                // selected={status == \"published\" ? \"selected\" : null}\n              >\n                Published\n              </option>\n              <option\n                value=\"on_Hold\"\n                // selected={status == \"on_Hold\" ? \"selected\" : null}\n              >\n                On Hold\n              </option>\n            </select>\n            <br />\n            <hr />\n            <button\n              style={{\n                borderRadius: \"5px\",\n                background: \"green\",\n                padding: \"5px\",\n                borderStyle: \"none\",\n                color: \"white\",\n                width: \"110px\"\n              }}\n              onClick={this.onSubmitCreatepage}\n            >\n              Create Page\n            </button>{\" \"}\n            or\n            <Link to={\"/showpages\"}> Cancel </Link>\n          </div>\n        </form>\n      </div>\n    );\n\n    if (loading) {\n      createPage = <Spinner />;\n    }\n    return <Fragment>{createPage}</Fragment>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    pageState: state.authState\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInputChange: e =>\n      dispatch({\n        type: \"onChange\",\n        name: e.target.name,\n        value: e.target.value\n      }),\n    onModelChange: model =>\n      dispatch({\n        type: \"onChange\",\n        name: \"content\",\n        value: model\n      })\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Createpage);\n"]},"metadata":{},"sourceType":"module"}