{"ast":null,"code":"var _jsxFileName = \"/home/ashitosh/mineapp/mine3/src/charts/ChartComponent.js\";\nimport React from \"react\";\nimport { PieChart, Pie, Cell } from \"recharts\";\nimport { COLORS, renderCustomizedLabel } from \"./chartConstant\";\n\nvar charts = function charts(props) {\n  // let inputElement = null;\n  // switch (props.elementType) {\n  //   case \"input\":\n  //     inputElement = (\n  //       <input\n  //         className=\"form-control \"\n  //         {...props.elementConfig}\n  //         value={props.value}\n  //         onChange={props.changed}\n  //       />\n  //     );\n  //     break;\n  //   case \"froalaEditor\":\n  //     inputElement = (\n  //       <FroalaEditor\n  //         className=\"form-control \"\n  //         {...props.elementConfig}\n  //         tag=\"textarea\"\n  //         placeholder=\"Content\"\n  //         model={props.value}\n  //         // model={content}\n  //         onModelChange={props.changed}\n  //       />\n  //     );\n  //     break;\n  //   case \"select\":\n  //     inputElement = (\n  //       <select\n  //         className=\"form-control \"\n  //         value={props.value}\n  //         onChange={props.changed}\n  //       >\n  //         {props.elementConfig.options.map(option => (\n  //           <option value={option.value}>{option.displayValue} </option>\n  //         ))}\n  //       </select>\n  //     );\n  //     break;\n  //   default:\n  //     inputElement = (\n  //       <input\n  //         className=\"form-control\"\n  //         {...props.elementConfig}\n  //         value={props.value}\n  //         onChange={props.changed}\n  //       />\n  //     );\n  // }\n  return (// <PieChart width={800} height={400}>\n    //   <Pie\n    //     data={this.props.pages}\n    //     cx={300}\n    //     cy={200}\n    //     labelLine={false}\n    //     label={renderCustomizedLabel}\n    //     outerRadius={100}\n    //     fill=\"#8884d8\"\n    //     dataKey=\"value\"\n    //   >\n    //     {this.props.data\n    //       ? this.props.data.map((entry, index) => (\n    //           <Cell\n    //             key={`cell-${index}`}\n    //             // label={entry.name}\n    //             fill={COLORS[index % COLORS.length]}\n    //           />\n    //         ))\n    //       : null}\n    //   </Pie>\n    // </PieChart>\n    React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, console.log(props))\n  );\n}; // const charts = props => (\n//   <PieChart width={800} height={400}>\n//     <Pie\n//       data={this.props.data}\n//       cx={300}\n//       cy={200}\n//       labelLine={false}\n//       label={renderCustomizedLabel}\n//       outerRadius={100}\n//       fill=\"#8884d8\"\n//       dataKey=\"value\"\n//     >\n//       {this.props.data\n//         ? this.props.data.map((entry, index) => (\n//             <Cell\n//               key={`cell-${index}`}\n//               // label={entry.name}\n//               fill={COLORS[index % COLORS.length]}\n//             />\n//           ))\n//         : null}\n//     </Pie>\n//   </PieChart>\n// );\n\n\nexport default charts;","map":{"version":3,"sources":["/home/ashitosh/mineapp/mine3/src/charts/ChartComponent.js"],"names":["React","PieChart","Pie","Cell","COLORS","renderCustomizedLabel","charts","props","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,IAAxB,QAAoC,UAApC;AACA,SAASC,MAAT,EAAiBC,qBAAjB,QAA8C,iBAA9C;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AACtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAN;AAvBF;AAyBD,CA/ED,C,CAiFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeD,MAAf","sourcesContent":["import React from \"react\";\nimport { PieChart, Pie, Cell } from \"recharts\";\nimport { COLORS, renderCustomizedLabel } from \"./chartConstant\";\n\nconst charts = props => {\n  // let inputElement = null;\n\n  // switch (props.elementType) {\n  //   case \"input\":\n  //     inputElement = (\n  //       <input\n  //         className=\"form-control \"\n  //         {...props.elementConfig}\n  //         value={props.value}\n  //         onChange={props.changed}\n  //       />\n  //     );\n  //     break;\n\n  //   case \"froalaEditor\":\n  //     inputElement = (\n  //       <FroalaEditor\n  //         className=\"form-control \"\n  //         {...props.elementConfig}\n  //         tag=\"textarea\"\n  //         placeholder=\"Content\"\n  //         model={props.value}\n  //         // model={content}\n  //         onModelChange={props.changed}\n  //       />\n  //     );\n  //     break;\n\n  //   case \"select\":\n  //     inputElement = (\n  //       <select\n  //         className=\"form-control \"\n  //         value={props.value}\n  //         onChange={props.changed}\n  //       >\n  //         {props.elementConfig.options.map(option => (\n  //           <option value={option.value}>{option.displayValue} </option>\n  //         ))}\n  //       </select>\n  //     );\n  //     break;\n\n  //   default:\n  //     inputElement = (\n  //       <input\n  //         className=\"form-control\"\n  //         {...props.elementConfig}\n  //         value={props.value}\n  //         onChange={props.changed}\n  //       />\n  //     );\n  // }\n\n  return (\n    // <PieChart width={800} height={400}>\n    //   <Pie\n    //     data={this.props.pages}\n    //     cx={300}\n    //     cy={200}\n    //     labelLine={false}\n    //     label={renderCustomizedLabel}\n    //     outerRadius={100}\n    //     fill=\"#8884d8\"\n    //     dataKey=\"value\"\n    //   >\n    //     {this.props.data\n    //       ? this.props.data.map((entry, index) => (\n    //           <Cell\n    //             key={`cell-${index}`}\n    //             // label={entry.name}\n    //             fill={COLORS[index % COLORS.length]}\n    //           />\n    //         ))\n    //       : null}\n    //   </Pie>\n    // </PieChart>\n    <div>{console.log(props)}</div>\n  );\n};\n\n// const charts = props => (\n//   <PieChart width={800} height={400}>\n//     <Pie\n//       data={this.props.data}\n//       cx={300}\n//       cy={200}\n//       labelLine={false}\n//       label={renderCustomizedLabel}\n//       outerRadius={100}\n//       fill=\"#8884d8\"\n//       dataKey=\"value\"\n//     >\n//       {this.props.data\n//         ? this.props.data.map((entry, index) => (\n//             <Cell\n//               key={`cell-${index}`}\n//               // label={entry.name}\n//               fill={COLORS[index % COLORS.length]}\n//             />\n//           ))\n//         : null}\n//     </Pie>\n//   </PieChart>\n// );\n\nexport default charts;\n"]},"metadata":{},"sourceType":"module"}