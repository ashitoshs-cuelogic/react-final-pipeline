{"ast":null,"code":"var _jsxFileName = \"/home/ashitosh/react-final-pipeline/src/charts/ChartComponent.js\";\nimport React, { Fragment } from \"react\";\nimport { PieChart, Pie, Cell } from \"recharts\";\nimport { COLORS, renderCustomizedLabel } from \"./chartConstant\";\n\nvar charts = function charts(props) {\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.pages ? props.pages.map(function (entry, index) {\n    return React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\",\n        width: \"40%\",\n        display: \"inline\",\n        float: \"left\",\n        marginLeft: \"60px\",\n        color: COLORS[index]\n      },\n      key: {\n        index: index\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, index + 1, \") \", entry.name, \": \", entry.value));\n  }) : null, React.createElement(PieChart, {\n    width: 800,\n    height: 400,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Pie, Object.assign({\n    data: props.pages,\n    cx: 300,\n    cy: 200,\n    labelLine: false,\n    label: renderCustomizedLabel,\n    fill: \"#8884d8\",\n    dataKey: \"value\",\n    outerRadius: 100\n  }, props.elementConfig, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), props.pages ? props.pages.map(function (entry, index) {\n    return React.createElement(Cell, {\n      key: \"cell-\".concat(index),\n      fill: COLORS[index % COLORS.length],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    });\n  }) : null)));\n};\n\nexport default charts;","map":{"version":3,"sources":["/home/ashitosh/react-final-pipeline/src/charts/ChartComponent.js"],"names":["React","Fragment","PieChart","Pie","Cell","COLORS","renderCustomizedLabel","charts","props","pages","map","entry","index","textAlign","width","display","float","marginLeft","color","name","value","elementConfig","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,IAAxB,QAAoC,UAApC;AACA,SAASC,MAAT,EAAiBC,qBAAjB,QAA8C,iBAA9C;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AACtB,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,KAAN,GACGD,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAACC,KAAD,EAAQC,KAAR;AAAA,WACd;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,SAAS,EAAE,MADN;AAELC,QAAAA,KAAK,EAAE,KAFF;AAGLC,QAAAA,OAAO,EAAE,QAHJ;AAILC,QAAAA,KAAK,EAAE,MAJF;AAKLC,QAAAA,UAAU,EAAE,MALP;AAMLC,QAAAA,KAAK,EAAEb,MAAM,CAACO,KAAD;AANR,OADT;AASE,MAAA,GAAG,EAAE;AAAEA,QAAAA,KAAK,EAALA;AAAF,OATP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,KAAK,GAAG,CADX,QACgBD,KAAK,CAACQ,IADtB,QAC8BR,KAAK,CAACS,KADpC,CAXF,CADc;AAAA,GAAhB,CADH,GAkBG,IAnBN,EAqBE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,GAAjB;AAAsB,IAAA,MAAM,EAAE,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AACE,IAAA,IAAI,EAAEZ,KAAK,CAACC,KADd;AAEE,IAAA,EAAE,EAAE,GAFN;AAGE,IAAA,EAAE,EAAE,GAHN;AAIE,IAAA,SAAS,EAAE,KAJb;AAKE,IAAA,KAAK,EAAEH,qBALT;AAME,IAAA,IAAI,EAAC,SANP;AAOE,IAAA,OAAO,EAAC,OAPV;AAQE,IAAA,WAAW,EAAE;AARf,KASME,KAAK,CAACa,aATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWGb,KAAK,CAACC,KAAN,GACGD,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAACC,KAAD,EAAQC,KAAR;AAAA,WACd,oBAAC,IAAD;AACE,MAAA,GAAG,iBAAUA,KAAV,CADL;AAEE,MAAA,IAAI,EAAEP,MAAM,CAACO,KAAK,GAAGP,MAAM,CAACiB,MAAhB,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADc;AAAA,GAAhB,CADH,GAOG,IAlBN,CADF,CArBF,CADF;AA8CD,CA/CD;;AAiDA,eAAef,MAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { PieChart, Pie, Cell } from \"recharts\";\nimport { COLORS, renderCustomizedLabel } from \"./chartConstant\";\n\nconst charts = props => {\n  return (\n    <Fragment>\n      {props.pages\n        ? props.pages.map((entry, index) => (\n            <div\n              style={{\n                textAlign: \"left\",\n                width: \"40%\",\n                display: \"inline\",\n                float: \"left\",\n                marginLeft: \"60px\",\n                color: COLORS[index]\n              }}\n              key={{ index }}\n            >\n              <span>\n                {index + 1}) {entry.name}: {entry.value}\n              </span>\n            </div>\n          ))\n        : null}\n\n      <PieChart width={800} height={400}>\n        <Pie\n          data={props.pages}\n          cx={300}\n          cy={200}\n          labelLine={false}\n          label={renderCustomizedLabel}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n          outerRadius={100}\n          {...props.elementConfig}\n        >\n          {props.pages\n            ? props.pages.map((entry, index) => (\n                <Cell\n                  key={`cell-${index}`}\n                  fill={COLORS[index % COLORS.length]}\n                />\n              ))\n            : null}\n        </Pie>\n      </PieChart>\n    </Fragment>\n  );\n};\n\nexport default charts;\n"]},"metadata":{},"sourceType":"module"}